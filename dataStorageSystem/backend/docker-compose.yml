version: "3.8"

services:
  mongo1:
    image: mongo:7.0
    command: ["--port", "27018"]
    ports:
      - 27018:27018
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # healthcheck:
    #   test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
    #   interval: 5s
    #   timeout: 30s
    #   start_period: 0s
    #   start_interval: 1s
    #   retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
  data_storage:
    build: 
      context: ./dataStorage
    # ports: # data storage should not be accessible from outsdie
      # - "3001:3001"
    depends_on:
      - mongo1
  auth_service:
    build: 
      context: ./authService
    ports:
      - "3000:3000"
    depends_on:
      - mongo1
      - data_storage
      - view_manager
  javascript_execution_service: # js execution service should not be accessible from outside
    build: 
      context: ./javascriptExecutionService
  python_execution_service: # python execution service should not be accessible from outside
    build: 
      context: ./pythonExecutionService
    ports:
      - "3004:3004"
  view_manager:
    build:
      context: ./viewManager
    ports:
      - "3002:3002"
    depends_on:
      - javascript_execution_service
      - python_execution_service
  control_centre_frontend:
    build:
      context: ../frontend/control_centre
    ports:
      - "4000:80"

volumes:
  mongo1_data:
  mongo1_config: