version: "3.8"

services:
  mongo1:
    image: mongo:7.0
    command: ["--port", "27018"]
    ports:
      - 27018:27018
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # healthcheck:
    #   test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
    #   interval: 5s
    #   timeout: 30s
    #   start_period: 0s
    #   start_interval: 1s
    #   retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
  data_storage:
    build: 
      context: ./backend/dataStorage
    # ports: # data storage should not be accessible from outsdie
      # - "3001:3001"
    depends_on:
      - mongo1
  auth_service: # auth service is accessible via gateway
    build: 
      context: ./backend/authService
    # ports:
    #   - "3000:3000"
    depends_on:
      - mongo1
      - data_storage
      - view_manager
  javascript_execution_service: # js execution service should not be accessible from outside
    build: 
      context: ./backend/javascriptExecutionService
  python_execution_service: # python execution service should not be accessible from outside
    build: 
      context: ./backend/pythonExecutionService
  view_manager: # view manager should have only a subset of its endpoints accessible via gateway
    build:
      context: ./backend/viewManager
    depends_on:
      - javascript_execution_service
      - python_execution_service
  control_centre_frontend: # control centre is accesssible through gateway
    build:
      context: ./frontend/control_centre
      args: # Important! We are expecting this storage system to be running on localhost! Otherwise you need to change the following environemnt variables for this component
        - NEXT_PUBLIC_BACKEND_SERVER_URI=http://localhost:8020
        - NEXT_PUBLIC_VIEW_MANAGER_ADDRESS=http://localhost:8020/view-manager
    # ports:
    #   - "4000:4000"
  gateway:
    build:
      context: ./
      dockerfile: ./gateway/Dockerfile
    depends_on:
      - view_manager
      - auth_service
      - control_centre_frontend
    ports:
      - "8020:80"


volumes:
  mongo1_data:
  mongo1_config: